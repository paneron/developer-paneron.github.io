title: Extension basics
media: []
redirectFrom: []
contents:
  doc:
    type: doc
    content:
      - type: paragraph
        content:
          - type: text
            text: Paneron’s power is in its extensions.
      - type: paragraph
        content:
          - type: text
            text: >-
              A Paneron extension is an NPM package, where the file specified as
              “entry” has a default export of certain format.
      - type: admonition
        attrs:
          type: note
        content:
          - type: admonition_caption
            content:
              - type: text
                text: Package scoping & naming rule
          - type: paragraph
            content:
              - type: text
                text: >-
                  Currently, Paneron requires all extension packages to be
                  published on NPM under 
              - type: text
                marks:
                  - type: code
                text: '@riboseinc'
              - type: text
                text: ' scope, named as '
              - type: text
                marks:
                  - type: code
                text: '@riboseinc/paneron-extension-<extension name>'
              - type: text
                text: .
      - type: paragraph
        content:
          - type: text
            text: >-
              The extension should detect whether it is being imported in
              Electron’s main or renderer thread, and export a default that has
              the following shape:
      - type: bullet_list
        content:
          - type: list_item
            content:
              - type: paragraph
                content:
                  - type: text
                    text: 'For main thread, for now it’s just an empty object.'
          - type: list_item
            content:
              - type: paragraph
                content:
                  - type: text
                    text: >-
                      For renderer thread, it should be a promise that returns
                      an object with a single “repositoryView” property. That
                      property should be a React component which will be
                      responsible for displaying the UI for displaying and
                      manipulating structured registry data.
      - type: paragraph
        content:
          - type: text
            text: 'Thread detection can be done by checking global '
          - type: text
            marks:
              - type: code
            text: process.type
          - type: text
            text: >-
              , the value of which in Electron is (counter-intuitively)
              “browser” for main thread, and (less confusingly) “renderer” in
              the renderer thread. (You’ll need to import “electron” for
              process.type to be available.)
      - type: admonition
        attrs:
          type: tip
        content:
          - type: paragraph
            content:
              - type: text
                text: 'Take a look at '
              - type: link
                attrs:
                  schemaID: web
                  reference: 'https://github.com/paneron/extension-template-basic'
                  hRef: 'https://github.com/paneron/extension-template-basic'
                  title: ''
                content:
                  - type: text
                    text: basic extension template
              - type: text
                text: ' for an example of Paneron extension layout. You can create your own extension by using that template, too.'
summary:
  doc:
    type: doc
    content:
      - type: paragraph
        content:
          - type: text
            text: >-
              A Paneron extension is responsible for providing the UI for
              manipulating structured data residing in a given repository.
